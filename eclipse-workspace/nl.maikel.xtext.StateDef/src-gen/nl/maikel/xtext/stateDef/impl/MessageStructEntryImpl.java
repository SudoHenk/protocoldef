/**
 * generated by Xtext 2.14.0
 */
package nl.sudohenk.xtext.stateDef.impl;

import java.util.Collection;

import nl.sudohenk.xtext.stateDef.MessageByteArray;
import nl.sudohenk.xtext.stateDef.MessageByteRange;
import nl.sudohenk.xtext.stateDef.MessageStructEntry;
import nl.sudohenk.xtext.stateDef.MessageStructureDatatype;
import nl.sudohenk.xtext.stateDef.StateDefPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Message Struct Entry</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.MessageStructEntryImpl#getDataType <em>Data Type</em>}</li>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.MessageStructEntryImpl#getRefType <em>Ref Type</em>}</li>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.MessageStructEntryImpl#getName <em>Name</em>}</li>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.MessageStructEntryImpl#getByteRange <em>Byte Range</em>}</li>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.MessageStructEntryImpl#getByteSize <em>Byte Size</em>}</li>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.MessageStructEntryImpl#getDataAssignment <em>Data Assignment</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MessageStructEntryImpl extends MinimalEObjectImpl.Container implements MessageStructEntry
{
  /**
   * The default value of the '{@link #getDataType() <em>Data Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataType()
   * @generated
   * @ordered
   */
  protected static final String DATA_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDataType() <em>Data Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataType()
   * @generated
   * @ordered
   */
  protected String dataType = DATA_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getRefType() <em>Ref Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRefType()
   * @generated
   * @ordered
   */
  protected static final String REF_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRefType() <em>Ref Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRefType()
   * @generated
   * @ordered
   */
  protected String refType = REF_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getByteRange() <em>Byte Range</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getByteRange()
   * @generated
   * @ordered
   */
  protected MessageByteRange byteRange;

  /**
   * The cached value of the '{@link #getByteSize() <em>Byte Size</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getByteSize()
   * @generated
   * @ordered
   */
  protected MessageByteArray byteSize;

  /**
   * The cached value of the '{@link #getDataAssignment() <em>Data Assignment</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataAssignment()
   * @generated
   * @ordered
   */
  protected EList<MessageStructureDatatype> dataAssignment;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MessageStructEntryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StateDefPackage.Literals.MESSAGE_STRUCT_ENTRY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDataType()
  {
    return dataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDataType(String newDataType)
  {
    String oldDataType = dataType;
    dataType = newDataType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateDefPackage.MESSAGE_STRUCT_ENTRY__DATA_TYPE, oldDataType, dataType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRefType()
  {
    return refType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRefType(String newRefType)
  {
    String oldRefType = refType;
    refType = newRefType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateDefPackage.MESSAGE_STRUCT_ENTRY__REF_TYPE, oldRefType, refType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateDefPackage.MESSAGE_STRUCT_ENTRY__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MessageByteRange getByteRange()
  {
    return byteRange;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetByteRange(MessageByteRange newByteRange, NotificationChain msgs)
  {
    MessageByteRange oldByteRange = byteRange;
    byteRange = newByteRange;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_RANGE, oldByteRange, newByteRange);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setByteRange(MessageByteRange newByteRange)
  {
    if (newByteRange != byteRange)
    {
      NotificationChain msgs = null;
      if (byteRange != null)
        msgs = ((InternalEObject)byteRange).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_RANGE, null, msgs);
      if (newByteRange != null)
        msgs = ((InternalEObject)newByteRange).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_RANGE, null, msgs);
      msgs = basicSetByteRange(newByteRange, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_RANGE, newByteRange, newByteRange));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MessageByteArray getByteSize()
  {
    return byteSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetByteSize(MessageByteArray newByteSize, NotificationChain msgs)
  {
    MessageByteArray oldByteSize = byteSize;
    byteSize = newByteSize;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_SIZE, oldByteSize, newByteSize);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setByteSize(MessageByteArray newByteSize)
  {
    if (newByteSize != byteSize)
    {
      NotificationChain msgs = null;
      if (byteSize != null)
        msgs = ((InternalEObject)byteSize).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_SIZE, null, msgs);
      if (newByteSize != null)
        msgs = ((InternalEObject)newByteSize).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_SIZE, null, msgs);
      msgs = basicSetByteSize(newByteSize, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_SIZE, newByteSize, newByteSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<MessageStructureDatatype> getDataAssignment()
  {
    if (dataAssignment == null)
    {
      dataAssignment = new EObjectContainmentEList<MessageStructureDatatype>(MessageStructureDatatype.class, this, StateDefPackage.MESSAGE_STRUCT_ENTRY__DATA_ASSIGNMENT);
    }
    return dataAssignment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_RANGE:
        return basicSetByteRange(null, msgs);
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_SIZE:
        return basicSetByteSize(null, msgs);
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__DATA_ASSIGNMENT:
        return ((InternalEList<?>)getDataAssignment()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__DATA_TYPE:
        return getDataType();
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__REF_TYPE:
        return getRefType();
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__NAME:
        return getName();
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_RANGE:
        return getByteRange();
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_SIZE:
        return getByteSize();
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__DATA_ASSIGNMENT:
        return getDataAssignment();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__DATA_TYPE:
        setDataType((String)newValue);
        return;
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__REF_TYPE:
        setRefType((String)newValue);
        return;
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__NAME:
        setName((String)newValue);
        return;
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_RANGE:
        setByteRange((MessageByteRange)newValue);
        return;
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_SIZE:
        setByteSize((MessageByteArray)newValue);
        return;
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__DATA_ASSIGNMENT:
        getDataAssignment().clear();
        getDataAssignment().addAll((Collection<? extends MessageStructureDatatype>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__DATA_TYPE:
        setDataType(DATA_TYPE_EDEFAULT);
        return;
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__REF_TYPE:
        setRefType(REF_TYPE_EDEFAULT);
        return;
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__NAME:
        setName(NAME_EDEFAULT);
        return;
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_RANGE:
        setByteRange((MessageByteRange)null);
        return;
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_SIZE:
        setByteSize((MessageByteArray)null);
        return;
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__DATA_ASSIGNMENT:
        getDataAssignment().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__DATA_TYPE:
        return DATA_TYPE_EDEFAULT == null ? dataType != null : !DATA_TYPE_EDEFAULT.equals(dataType);
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__REF_TYPE:
        return REF_TYPE_EDEFAULT == null ? refType != null : !REF_TYPE_EDEFAULT.equals(refType);
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_RANGE:
        return byteRange != null;
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__BYTE_SIZE:
        return byteSize != null;
      case StateDefPackage.MESSAGE_STRUCT_ENTRY__DATA_ASSIGNMENT:
        return dataAssignment != null && !dataAssignment.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (dataType: ");
    result.append(dataType);
    result.append(", refType: ");
    result.append(refType);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //MessageStructEntryImpl
