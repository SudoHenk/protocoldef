/**
 * generated by Xtext 2.14.0
 */
package nl.sudohenk.xtext.stateDef.impl;

import java.util.Collection;

import nl.sudohenk.xtext.stateDef.Message;
import nl.sudohenk.xtext.stateDef.MessageEnum;
import nl.sudohenk.xtext.stateDef.MessageStruct;
import nl.sudohenk.xtext.stateDef.MessageTransition;
import nl.sudohenk.xtext.stateDef.State;
import nl.sudohenk.xtext.stateDef.StateDefPackage;
import nl.sudohenk.xtext.stateDef.StateMachine;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>State Machine</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.StateMachineImpl#getName <em>Name</em>}</li>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.StateMachineImpl#getGlobalStructs <em>Global Structs</em>}</li>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.StateMachineImpl#getGlobalEnums <em>Global Enums</em>}</li>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.StateMachineImpl#getMessages <em>Messages</em>}</li>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.StateMachineImpl#getInitState <em>Init State</em>}</li>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.StateMachineImpl#getStates <em>States</em>}</li>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.StateMachineImpl#getTransitions <em>Transitions</em>}</li>
 *   <li>{@link nl.sudohenk.xtext.stateDef.impl.StateMachineImpl#getEndState <em>End State</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StateMachineImpl extends MinimalEObjectImpl.Container implements StateMachine
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getGlobalStructs() <em>Global Structs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGlobalStructs()
   * @generated
   * @ordered
   */
  protected EList<MessageStruct> globalStructs;

  /**
   * The cached value of the '{@link #getGlobalEnums() <em>Global Enums</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGlobalEnums()
   * @generated
   * @ordered
   */
  protected EList<MessageEnum> globalEnums;

  /**
   * The cached value of the '{@link #getMessages() <em>Messages</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMessages()
   * @generated
   * @ordered
   */
  protected EList<Message> messages;

  /**
   * The cached value of the '{@link #getInitState() <em>Init State</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitState()
   * @generated
   * @ordered
   */
  protected State initState;

  /**
   * The cached value of the '{@link #getStates() <em>States</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStates()
   * @generated
   * @ordered
   */
  protected EList<State> states;

  /**
   * The cached value of the '{@link #getTransitions() <em>Transitions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTransitions()
   * @generated
   * @ordered
   */
  protected EList<MessageTransition> transitions;

  /**
   * The cached value of the '{@link #getEndState() <em>End State</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndState()
   * @generated
   * @ordered
   */
  protected State endState;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StateMachineImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StateDefPackage.Literals.STATE_MACHINE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateDefPackage.STATE_MACHINE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<MessageStruct> getGlobalStructs()
  {
    if (globalStructs == null)
    {
      globalStructs = new EObjectContainmentEList<MessageStruct>(MessageStruct.class, this, StateDefPackage.STATE_MACHINE__GLOBAL_STRUCTS);
    }
    return globalStructs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<MessageEnum> getGlobalEnums()
  {
    if (globalEnums == null)
    {
      globalEnums = new EObjectContainmentEList<MessageEnum>(MessageEnum.class, this, StateDefPackage.STATE_MACHINE__GLOBAL_ENUMS);
    }
    return globalEnums;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Message> getMessages()
  {
    if (messages == null)
    {
      messages = new EObjectContainmentEList<Message>(Message.class, this, StateDefPackage.STATE_MACHINE__MESSAGES);
    }
    return messages;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public State getInitState()
  {
    return initState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInitState(State newInitState, NotificationChain msgs)
  {
    State oldInitState = initState;
    initState = newInitState;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StateDefPackage.STATE_MACHINE__INIT_STATE, oldInitState, newInitState);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInitState(State newInitState)
  {
    if (newInitState != initState)
    {
      NotificationChain msgs = null;
      if (initState != null)
        msgs = ((InternalEObject)initState).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StateDefPackage.STATE_MACHINE__INIT_STATE, null, msgs);
      if (newInitState != null)
        msgs = ((InternalEObject)newInitState).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StateDefPackage.STATE_MACHINE__INIT_STATE, null, msgs);
      msgs = basicSetInitState(newInitState, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateDefPackage.STATE_MACHINE__INIT_STATE, newInitState, newInitState));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<State> getStates()
  {
    if (states == null)
    {
      states = new EObjectContainmentEList<State>(State.class, this, StateDefPackage.STATE_MACHINE__STATES);
    }
    return states;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<MessageTransition> getTransitions()
  {
    if (transitions == null)
    {
      transitions = new EObjectContainmentEList<MessageTransition>(MessageTransition.class, this, StateDefPackage.STATE_MACHINE__TRANSITIONS);
    }
    return transitions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public State getEndState()
  {
    return endState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEndState(State newEndState, NotificationChain msgs)
  {
    State oldEndState = endState;
    endState = newEndState;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StateDefPackage.STATE_MACHINE__END_STATE, oldEndState, newEndState);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEndState(State newEndState)
  {
    if (newEndState != endState)
    {
      NotificationChain msgs = null;
      if (endState != null)
        msgs = ((InternalEObject)endState).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StateDefPackage.STATE_MACHINE__END_STATE, null, msgs);
      if (newEndState != null)
        msgs = ((InternalEObject)newEndState).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StateDefPackage.STATE_MACHINE__END_STATE, null, msgs);
      msgs = basicSetEndState(newEndState, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StateDefPackage.STATE_MACHINE__END_STATE, newEndState, newEndState));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case StateDefPackage.STATE_MACHINE__GLOBAL_STRUCTS:
        return ((InternalEList<?>)getGlobalStructs()).basicRemove(otherEnd, msgs);
      case StateDefPackage.STATE_MACHINE__GLOBAL_ENUMS:
        return ((InternalEList<?>)getGlobalEnums()).basicRemove(otherEnd, msgs);
      case StateDefPackage.STATE_MACHINE__MESSAGES:
        return ((InternalEList<?>)getMessages()).basicRemove(otherEnd, msgs);
      case StateDefPackage.STATE_MACHINE__INIT_STATE:
        return basicSetInitState(null, msgs);
      case StateDefPackage.STATE_MACHINE__STATES:
        return ((InternalEList<?>)getStates()).basicRemove(otherEnd, msgs);
      case StateDefPackage.STATE_MACHINE__TRANSITIONS:
        return ((InternalEList<?>)getTransitions()).basicRemove(otherEnd, msgs);
      case StateDefPackage.STATE_MACHINE__END_STATE:
        return basicSetEndState(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StateDefPackage.STATE_MACHINE__NAME:
        return getName();
      case StateDefPackage.STATE_MACHINE__GLOBAL_STRUCTS:
        return getGlobalStructs();
      case StateDefPackage.STATE_MACHINE__GLOBAL_ENUMS:
        return getGlobalEnums();
      case StateDefPackage.STATE_MACHINE__MESSAGES:
        return getMessages();
      case StateDefPackage.STATE_MACHINE__INIT_STATE:
        return getInitState();
      case StateDefPackage.STATE_MACHINE__STATES:
        return getStates();
      case StateDefPackage.STATE_MACHINE__TRANSITIONS:
        return getTransitions();
      case StateDefPackage.STATE_MACHINE__END_STATE:
        return getEndState();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StateDefPackage.STATE_MACHINE__NAME:
        setName((String)newValue);
        return;
      case StateDefPackage.STATE_MACHINE__GLOBAL_STRUCTS:
        getGlobalStructs().clear();
        getGlobalStructs().addAll((Collection<? extends MessageStruct>)newValue);
        return;
      case StateDefPackage.STATE_MACHINE__GLOBAL_ENUMS:
        getGlobalEnums().clear();
        getGlobalEnums().addAll((Collection<? extends MessageEnum>)newValue);
        return;
      case StateDefPackage.STATE_MACHINE__MESSAGES:
        getMessages().clear();
        getMessages().addAll((Collection<? extends Message>)newValue);
        return;
      case StateDefPackage.STATE_MACHINE__INIT_STATE:
        setInitState((State)newValue);
        return;
      case StateDefPackage.STATE_MACHINE__STATES:
        getStates().clear();
        getStates().addAll((Collection<? extends State>)newValue);
        return;
      case StateDefPackage.STATE_MACHINE__TRANSITIONS:
        getTransitions().clear();
        getTransitions().addAll((Collection<? extends MessageTransition>)newValue);
        return;
      case StateDefPackage.STATE_MACHINE__END_STATE:
        setEndState((State)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StateDefPackage.STATE_MACHINE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case StateDefPackage.STATE_MACHINE__GLOBAL_STRUCTS:
        getGlobalStructs().clear();
        return;
      case StateDefPackage.STATE_MACHINE__GLOBAL_ENUMS:
        getGlobalEnums().clear();
        return;
      case StateDefPackage.STATE_MACHINE__MESSAGES:
        getMessages().clear();
        return;
      case StateDefPackage.STATE_MACHINE__INIT_STATE:
        setInitState((State)null);
        return;
      case StateDefPackage.STATE_MACHINE__STATES:
        getStates().clear();
        return;
      case StateDefPackage.STATE_MACHINE__TRANSITIONS:
        getTransitions().clear();
        return;
      case StateDefPackage.STATE_MACHINE__END_STATE:
        setEndState((State)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StateDefPackage.STATE_MACHINE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case StateDefPackage.STATE_MACHINE__GLOBAL_STRUCTS:
        return globalStructs != null && !globalStructs.isEmpty();
      case StateDefPackage.STATE_MACHINE__GLOBAL_ENUMS:
        return globalEnums != null && !globalEnums.isEmpty();
      case StateDefPackage.STATE_MACHINE__MESSAGES:
        return messages != null && !messages.isEmpty();
      case StateDefPackage.STATE_MACHINE__INIT_STATE:
        return initState != null;
      case StateDefPackage.STATE_MACHINE__STATES:
        return states != null && !states.isEmpty();
      case StateDefPackage.STATE_MACHINE__TRANSITIONS:
        return transitions != null && !transitions.isEmpty();
      case StateDefPackage.STATE_MACHINE__END_STATE:
        return endState != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //StateMachineImpl
